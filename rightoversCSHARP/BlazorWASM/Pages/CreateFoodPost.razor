@page "/CreateFoodPost"
@using HttpClients.ClientInterfaces
@using BlazorWASM.Pages.UIComponents
@using Domain.Classes
@using Domain.DTOs
@using Microsoft.VisualBasic.CompilerServices
@inject NavigationManager navMgr
@inject IFoodPostService fpService;

<div class="card">
    <h3>Create Food Post</h3>
    <div class="form-group field">
        <label>Title:</label>
        <br/>
        <input type="text" @bind="title" @bind:event="oninput"/>
    </div>
    <div class="form-group field">
        <label>Description:</label>
        <br/>
        <input type="text" @bind="description" @bind:event="oninput"/>
    </div>
    <div class="form-group field">
        <label>Category:</label>
        <br/>
        <input type="text" @bind="category" @bind:event="oninput"/>
    </div>
    <div class="form-group field">
        <label>Days left to consume: </label>
        <input type="text" @bind="daysLeftToEat" @bind:event="oninput"/>

    </div>
    <div class="form-group field">
        <label>Upload image:</label>
        <br/>
        <InputFile></InputFile>
        @if (!string.IsNullOrEmpty(resultMsg))
        {
            <label style="color: @color">@resultMsg</label>
        }
    </div>
    <div class="button-row">
        <button @onclick="CreateAsync" class="acceptbtn">Create</button>
    </div>
    <Modal ShowModal="showModal">
        <p>@createdDtoString</p>
        <button @onclick="@Proceed">Wonderful</button>
    </Modal>
</div>

@code {
    private string title;
    private string description;
    private string daysLeftToEat;
    private string category;
    private string pictureUrl;
    private List<int> days;
    //private Image image;
    private string color = "red";
    private bool showModal;
    private string createdDtoString;

    private string resultMsg;

    protected override void OnInitialized()
    {
        try
        {
            days = new List<int>();
            days.Add(1);
            days.Add(2);
            days.Add(3);
            days.Add(4);
            days.Add(5);
            days.Add(6);
            days.Add(7);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }

    private async Task clear()
    {
        title = "";
        category = "";
        description = "";
        pictureUrl = "";
    }

    private async Task CreateAsync()
    {
        try
        {
            int howManyDays = IntegerType.FromString(daysLeftToEat);
            FoodPost newFoodPost = await fpService.Create(new FoodPostCreationDTO(title, category, description, "defaultPictureUrl", howManyDays));
            await clear();
            resultMsg = "Food Post successfully created";
            color = "green";
            createdDtoString = "Your Food Post <" + newFoodPost.Title + "> was created.";
            showModal = true;
        }
        catch (Exception e)
        {
            resultMsg = e.Message;
            color = "red";
        }
    }

    private void Proceed()
    {
        showModal = false;
        navMgr.NavigateTo("/");
    }

}